<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
	http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
	http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">
    <int:channel id="inboundChannel"/>

    <int-file:inbound-channel-adapter id="producer-file-adapter"
                                      channel="inboundChannel"
                                      directory="C:\\File\\inbound"
                                      prevent-duplicates="true"
                                      filename-pattern="*.xml">
        <int:poller fixed-rate="5000"/>
    </int-file:inbound-channel-adapter>

    <int-file:file-to-string-transformer id="file-2-string-transformer"
                                         input-channel="inboundChannel"
                                         output-channel="xml-inboundChannel"/>


    <bean id="displayShipOrder" class="com.pascoal.service.ShipOrderServiceActivator"/>

    <!-- This bean can do both unmarshalling and marshalling work-->
    <bean id="jaxbMarshaller"
          class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="com.pascoal.domain"/>
    </bean>


    <int:channel id="xml-inboundChannel"/>

    <!--SI unmarshalling-transformer that takes a message from the inbound channel, transforms it to an object (using the JAXB marshaller)
    and puts the new object message in the outbound channel.-->

    <int-xml:unmarshalling-transformer
            id="xml-2-object-transformer"
            input-channel="xml-inboundChannel"
            output-channel="outboundChannel"
            unmarshaller="jaxbMarshaller"/>

    <int:channel id="outboundChannel"/>

    <int:service-activator id="displayShipOrderServiceActivator"
                           input-channel="outboundChannel"
                           ref="displayShipOrder"/>

</beans>
